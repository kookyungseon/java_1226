Day04

1. 형변환(TypeCasting)
- 자료형을 다른 자료형으로 변환하는 것
- 형변환은 숫자형 기본 자료형 간에만 가능(정수, 실수)
  Ex)   10 > 10.0
           15.2 -> 15
- 숫자형 -> 문자열 : 숫자형 + “ “

2. 형변환의 종류
1) 자동형 변환
	작은 byte의 값을 큰 byte의 변수에 저장하면 자동으로 형변환 된다.
	ex) long num = 1000;
	- 정수 + 정수 = 정수
	  정수 + 실수 = 실수
	- 문자형 (char)는 정수형(int)로 자동형변환된다.
	ex) int ch1 = ‘A’
	자바에서 문자를 저장할 때 유니코드의 정수값을 저장한다. 
	
2) 강제형 변환
	큰 byte의 값을 작은 byte변수에 저장하려면 강제 형변환을 해야한다 
	ex) (int)10.0 -> 10
	실수 -> 정수 
	- (자료형) 값

2. 문자열과 관련된 형변환 
- 문자열과 다른 자료형을 연결하면 결과는 항상 문자열이 된다.
Ex) String name = 20 +”살”;
- 참조 자료형은 기본 자료형으로 형변환이 불가능하다.
 String 타입은 Integer, Double, Boolean 클래스의 도움을 받아 형변환을 할 수 있다. 


입력 메소드 
입력 : 키보드로 입력
사용자로부터 입력을 받을 수 있게 하는 메소드 

Scanner 클래스(입력에 관련된 기능을 가진 클래스)

Scanner sc = new Scanner(System.in);
자료형	   변수명 = 값(Scanner 클래스를 똑같이 복제한 값)

next() : 입력받은 값을 String 타입으로 가져온다. 
nextLine() : 입력받은 String 타입으로 돌려준다. 
		띄어쓰기를 포함한 한 줄 전체를 입력받는다 

nextInt() : 입력받은 값을 int타입으로 돌려준다.
nextDouble() : 입력 받은 값을 double로 받아온다.

연산자 

연산자의 우선 순위 
1. 최우선 연산자  : (), .(~의, ~안에)
2. 단항 연산자 : +(양수), -(음수), !(Not), ++, --
3. 산술 연산자 : +, -, *, / .%(나머지 연산자) 
4. 쉬피트 연산자 (비트연산자)
5. 관계 연산자  : <, >, >=, <=, ==, !=
6. 논리 연산자 : &&, ||, ^ 
7. 삼항 연산자 
8. 대입 연산자(=)

