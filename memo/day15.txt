Day15

다중 상속
여러 부모 클래스를 상속하는 것
인터페이스에 default 메소드를 선언을 허용하며 
여러개를 지정할 수 있는 인터페이스 특성상 다중상속을 지우너하는 것과 다름이 없다.


모호성 (ambiguity)
하나의 자식이 여러 부모를 상속받을 때 서로 다른 부모 클래스에 동일한 이름의 멤버가 있다면 
어떤 부모의 멤버인지 알 수가없다. 

모호성 해결방법 
1. 두개 이상의 인터페스에 같은 메소드가 (이름, 매개변수, 리턴타입이 같은 메소드)
    선언되어 있는 경우 - > 자식 클래스에서 재정의하여 사용한다. 
2. 부모 클래스의 메소드와 인터페이스의 디폴트 메소드가 같은 경우 
    -> 부모 클래스의 메소드가 사용된다.

마커 인터페이스 ( Marker Interface )
클래스들을 그룹화하기 위한 목적으로 사용한다.
마커 인터페이스는 어떠한 멤버도 선언하지 않는다.
- > 서로 다른 클래스들을 공통되는 타입을 갖도록 하는 것이 유일한 목적이기 때문에 



1. 내부 클래스 (Inner Class)

클래스 (외부 클래스)
	필드
	메소드 
	클래스 (내부 클래스)

내부 클래스 : 클래스 내부에 선언된 클래스 
외부 클래스 : 내부  클래스를 가진 클래스 
내부 클래스로 선언된 클래스는 외부 클래스를 상속받지 않아도 외부 클래스의 멤버들 사용가능
내부 클래스만 별도로 사용하지 못한다.
- > 외부 클래스가 메모리 할당 되어야 내부 클래스의 객체화가 가능하기 때문에 
*메소드 안에서 클래스를 선언할 수 있다.

내부 클래스는 안드로이드 앱개발에 사용되나 웹개발에서는 많이 쓰이지 않음
- > 익명 클래스에서 내부 클래스 개념이 나오기 때문에 알고 있어야 함 

내부 클래스의 종류
1. 인스턴스 내부 클래스
2. 스태틱 내부 클래스
3. 로컬 내부 클래스 : 외부 클래스의 메소드 안에서 선언한 내부 클래스

익명 클래스 (Anonymous class)
- 이름이 없는 클래스 
- 미구현된 멤버를 구현하여 일회성으로 객체를 생성하기 위해 사용한다.

익명클래스 사용 방법
1) 필드에 미구현된 클래스를 익명 자식 객체를 생성
2) 메소드의 지역변수로서 초기값으로 대입
3) 익명객체 매개변수로서 대입 



























