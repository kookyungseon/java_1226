Day04

0. 복습
추상 클래스 

추상 메소드 
: 메소드를 선언만 하고 구현을 하지 않은 것을 추상메소드라고 한다(미완성된 메소드)
abstract 리턴타입 메소드명 (매개변수, …);
	1. abstract 키워드를 사용한다.
	2. 마지막에 세미콜론을 써야한다.

추상 클래스 
abstract 키워드가 붙은 클래스 
- 추상 메소드가 한 개 이상 있는 클래스는 반드시 추상 클래스로 선언해야한다.
(미완성된 클래스)

추상 클래스 선언
abstract class 클래스명 {
	
	abstract 리턴타입 메소드명(매개변수,…);
}

1. abstract 키워드를 사용한다.
2. 객체화 시킬 수 없다.

**미완성된 메소드(추상 메소드)는 상속받은 자식 클래스에서 반드시 재정의하여 
  구현을 해야만 해당 자식 클래스를 객체화 시킬 수 있다
  그러므로 [강제성]을 부여하기 위해서 메소드로 선언한다.

추상 클래스를 사용하는 이유
공통되는 속성과 행위를 추상화하여 부모클래스를 만드는데 모든 자식 클래스에서
구현해야하는 메소드가 있다면 추상 메소드로 선언하는게 좋다. 
추상 클래스를 상속 받은 자식 클래스는 추상 메소드를 오버라이딩 하지 않으면 
오류가 발생하므로 [강제성]이 생기게 된다.
만약 부모 클래스에서 메소드를 구현 한다면 강제성이 없으므로 자식 클래스를 
만드는 개발자가 재정의하지 않고 그냥 넘어갈 수 있다.

인터페이스(interface)
일종의 추상 클래스이지만 클래스라 부르지 않으며 추상화가 더 높다.
멤버로는 상수와 추상 메소드만 가질 수 있다.

인터페이스의 선언 
interface 인터페이스명{
	멤버 선언;
}

인터페이스의 멤버
1. 모든 필드는 public static final이다. (생략해도 자동으로 붙음)
2. 모든 메소드는 public abstract 이다. (생략해도 자동으로 붙음)

클래스 상속과 인터페이스의 구현
1. 클래스는 단일 상속만 가능하며 인터페이스는 다중 구현이 가능하다 
2. 상속 구현은 별개이다 
    즉, 하나의 클래스에 상속과 구현을 동시에 할 수 있다.
3. 인터페이스는 인터페이스를 상속(extends)할 수 있다. 

Adapter (추상 클래스)

 모든 강제성         일부 강제성
[인터페이스] - > [Adapter클래스] -> [자식클래스]
 	         구현 		     상속	

다중 상속
여러 부모 클래스를 상속하는 것
java에서는 모호성 때문에 다중 상속을 지원하지 않음
JDK8버전 부터는 default 메소드를 선언을 허용하며 
여러개를 지정할 수 있는 인터페이스 특성상 다중상속을 지원하는 것과 다름이 없다.

인터페이스의 추가 된 기능 (JDK1.8부터 추가됨)
1. default 메소드를 선언할 수 있다. 
	[public] default 리턴타입 메소드명(매개변수){
		실행할 코드;
	}
	인터페이스의 default 메소드는 ‘default’라는 키워드를 명시해야 한다. 
	implements 한 클래스에서 재정의 가능 
2. static 메소드를 선언할 수 있다.
	[public] static 리턴타입 메소드명(매개변수){ }
	객체 없이 인터페이스만으로도 호출이 가능
	인터페이스명.메소드명으로 호출
	Override 불가능
3. private(JDK9부터 사용가능 )

모호성(ambiguity)
하나의 자식이 여러 부모를 상속받을 때 서로 다른 부모 클래스에 동일한 이름의 멤버가 있다면 
어떤 부모의 멤버인지 알 수가 없다.

모호성 해결방법 예시
1. 두개의 인터페이스에 같은 메소드가(이름, 매개변수, 리턴타입이 같은 메소드) 선언되어 
   있는 경우 -> 자식 클래스에서 재정의하여 사용한다.
2. 부모 클래스의 메소드와 인터페이스의 디폴트 메소드가 같은 경우
 - > 부모 클래스의 메소드가 사용된다.
**인터페이스도 타입이다. 인터페이스는 부모이고 구현한 클래스가 자식이다 .


마커 인터페이스 (Marker Interface)
클래스들을 그룹화하기 위한 목적으로 사용한다.
서로 다른 클래스들을 공통되는 타입을 갖도록 하는 것이 유일한 목적이기 때문에 
마커 인터페이스는 어떠한 멤버도 선언하지 않는다.

초식 동물 (부)		육식 동물 (부)		잡식 동물 (부)
얼룩말			상어			비둘기			마커인터페이스
사슴 			늑대			개			하늘, 땅	
말			독수리			참새
			호랑이			원숭이


내부 클래스(Inner class)

클래스
	필드
	메소드
	클래스

내부 클래스 : 클래스 내부에 선언된 클래스 
외부 클래스 : 내부 클래스를 가진 클래스
내부 클래스로 선언된 클래스는 외부 클래스를 상속받지 않아도 외부 클래스의 멤버들을 사용가능 
외부 클래스가 메모리에 할당되어야 내부 클래스의 객체화가 가능하므로 
내부 클래스만 별도로 사용하지 못한다 .
**메소드 안에서 클래스를 선언할 수 있다.

내부클래스는 안드로이드 앱개발에 사용되나 웹개발에서는 많이 쓰이지 않음
- > 익명 클래스에서 내부클래스 개념이 나오기 때문에 알고 있어야 함!

내부 클래스의 종류
1. 인스턴스 내부 클래스 
2. 스태틱 내부 클래스
3. 로컬 내부 클래스 



	































