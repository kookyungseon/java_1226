Day18

0. 복습
API
: 어플리케이션 개발에 필요한 것들을 가져다 쓸 수 있게 해주는 중간다리(매개체)
개발에 필요한 라이브러리들을 사용하는 방법

라이브러리
	: 다른 개발자들이 미리 만들어 놓은 소스코드 덩어리

JAVA API
	- 내부 API
	JDK 설치 시 기본적으로 제공해주는 기본 API

	- 외부 API
	선배 개발자들이 개발한 패키지 및 클래스들을 의미한다
	보통 JAR파일로 배포하여 자바 프로젝트에 build path에 추가하여 
	사용할 수 있다

	JAR 파일 배포
	배포할 클래스 또는 패키지 우클릭 > Export > java /JAR file 선택
	> Next destination을 원하는 경로로 선택 > export java source file …
	체크

	외부 API Build Path에 추가
	배포된 JAR 파일 다운받기
	프로젝트 우클릭 > Build Path > Configure Build Path
	> Libraries 탭 클릭 > Add External JAR 클릭 > 
	저장된 경로의 .jar 팡리 더블클릭으로 추가 > Apply 클릭
	Orders and Exports 탭 클릭 > Select All 클릭 > Apply and Close 클릭

	
1. Object 클래스
모든 클래스의 최상위 조상 클래스 

1) .toString( ) 
Object toString( )은 참조값을 문자열 형태로 반환한다. (클래스경로와이름@16진수로 변환된(해쉬코드))
참조변수(객체)를 print( )등의 출력메소드로 출력하면 항상 toString( )이 사용된다 
-> 참조값이 나오는 이유
toString( )을 통해 출력되는 문자열을 바꾸고 싶으면 재정의해서 사용하면 된다. 

2) equals( )
	Object의 equals( )는 사실 ==과 같아(참조값 비교)
	String의 equals( )는 재정의 되어 객체가 가진 값을 비교한다
	-> 문자열의 비교는 equals( )를 사용해야한다 
	우리가 만든 클래스 객체를 비교하고 싶다면, 비교 기준을 재정의하여 사용할 수 있다. 


Casting
타입변환 종류
1. 자료형 (타입) 변환
2. 클래스의 객체 타입 변환 (casting)
	: 서로 상속 관계에 있는 클래스 사이에서만 변환 가능 

(1) up casting : 자식 값을 부모의 타입으로 형 변환 (자동 형변환)
	*자식 클래스 타입의 객체는 부모클래스 타입도 동시에 갖기 때문에 

(2) down casting : 이미 up casting 된 값을 자식 타입으로 형 변환
	* 부모의 값을 자식 타입으로 형 변환시 오류 발생


객체간 타입 비교 (instanceof)
		a instance A : a가 A타입이면 true, 아니면 false


































