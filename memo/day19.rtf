{\rtf1\ansi\ansicpg949\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh16740\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 day09\
\
Casting\
\uc0\u53440 \u51077  \u48320 \u54872  \u51333 \u47448 \
1. \uc0\u51088 \u47308 \u54805 (\u53440 \u51077 )\u48320 \u54872 \
	\uc0\u51088 \u46041 \u54805 \u48320 \u54872 \
	double num = 10; -> 10.0;\
	\uc0\u44053 \u51228  \u54805 \u48320 \u54872 \
	int num = (int)10.0 -> 10\
\
2. \uc0\u53364 \u47000 \u49828 \u51032  \u44061 \u52404  \u53440 \u51077  \u48320 \u54872 (casting)\
   : \uc0\u49436 \u47196  \u49345 \u49549  \u44288 \u44228 \u50640  \u51080 \u45716  \u53364 \u47000 \u49828  \u49324 \u51060 \u50640 \u49436 \u47564  \u48320 \u54872  \u44032 \u45733 \
\
(1) up casting : \uc0\u51088 \u49885 \u51032  \u44050 \u51012  \u48512 \u47784  \u53440 \u51077 \u51004 \u47196  \u54805 \u48320 \u54872 (\u51088 \u46041  \u54805 \u48320 \u54872 )\
   * \uc0\u51088 \u49885  \u53364 \u47000 \u49828  \u53440 \u51077 \u51032  \u44061 \u52404 \u45716  \u48512 \u47784  \u53364 \u47000 \u49828  \u53440 \u51077 \u46020  \u46041 \u49884 \u50640  \u44054 \u44592  \u46412 \u47928 \u50640 !\
(2) down casting : \uc0\u51060 \u48120  up casting\u46108  \u44050 \u51012  \u51088 \u49885  \u53440 \u51077 \u51004 \u47196  \u54805 \u48320 \u54872 \
   * \uc0\u48512 \u47784 \u51032  \u44050 \u51012  \u51088 \u49885  \u53440 \u51077 \u51004 \u47196  \u54805 \u48320 \u54872 \u49884  \u50724 \u47448  \u48156 \u49373  \
\
Casting\uc0\u51012  \u49324 \u50857 \u54616 \u45716  \u51060 \u50976 \
\uc0\u48512 \u47784 \u53440 \u51077 \u51064  \u54616 \u45208 \u51032  \u51200 \u51109 \u44277 \u44036 \u50640  \u50668 \u47084  \u53440 \u51077 \u51032  \u52280 \u51312 \u44050 \u51012  up Casting\u54616 \u50668  \u51200 \u51109 \u54624  \u49688  \u51080 \u45796 .\
(\uc0\u52280 \u51312 \u48320 \u49688 \u51032  \u45796 \u54805 \u49457 )\
\
-\uc0\u47564 \u50557  \u54616 \u45208 \u51032  \u44592 \u45733 \u51012  \u54616 \u45716  \u47700 \u49548 \u46300 \u47484  \u47564 \u46308  \u46412  \u47588 \u44060 \u48320 \u49688 \u47196  \u50668 \u47084  \u51088 \u49885  \u53440 \u51077 \u51012  \u48155 \u50500 \u50556 \u54620 \u45796 \u44256  \u44032 \u51221 !\
Casting\uc0\u51060  \u50630 \u45796 \u47732  \u51088 \u49885 \u53440 \u51077 \u51012  \u47588 \u44060 \u48320 \u49688 \u47484  \u48155 \u45716  \u47700 \u49548 \u46300 \u47484  \u53440 \u51077 \u48324 \u47196  \u44033 \u44033  \u47564 \u46308 \u50612 \u50556 \u54620 \u45796 . \
(\uc0\u51088 \u49885 \u45180 \u47532 \u45716  \u53440 \u51077 \u51060  \u45796 \u47476 \u44592  \u46412 \u47928 )\
Casting\uc0\u51012  \u54876 \u50857 \u54616 \u47732  \u48512 \u47784 \u53440 \u51077 \u51032  \u47588 \u44060 \u48320 \u49688 \u47484  \u44032 \u51652  \u54616 \u45208 \u51032  \u47700 \u49548 \u46300 \u47564  \u47564 \u46308 \u47732  \u46108 \u45796 \
(\uc0\u48512 \u47784 \u53440 \u51077 \u51032  \u52280 \u51312 \u48320 \u49688 \u47196  \u47564 \u46304  \u51088 \u49885 \u53440 \u51077 \u51012  \u51200 \u51109 \u54624  \u49688  \u51080 \u44592  \u46412 \u47928 \u50640 )\
\
\
\uc0\u45796 \u54805 \u49457 \
\uc0\u54616 \u45208 \u51032  \u44163 \u51060  \u50668 \u47084 \u44032 \u51648  \u54805 \u53468 \u47484  \u44032 \u51656  \u49688  \u51080 \u45716  \u49457 \u51656 \
1. \uc0\u50724 \u48260 \u47196 \u46377 \
		\uc0\u44057 \u51008  \u53364 \u47000 \u49828  \u45236 \u50640 \u49436  \u49373 \u49457 \u51088  \u46608 \u45716  \u47700 \u49548 \u46300 \u47484  \u44057 \u51008  \u51060 \u47492 \u51004 \u47196  \
		\uc0\u47588 \u44060 \u48320 \u49688 \u51032  \u53440 \u51077 \u51060 \u45208  \u49688 \u47564  \u45796 \u47476 \u44172  \u47564 \u46304 \u45796 . \
2. \uc0\u50724 \u48260 \u46972 \u51060 \u46377 \
		\uc0\u48512 \u47784  \u53364 \u47000 \u49828 \u50640 \u49436  \u49440 \u50616 \u54620  \u47700 \u49548 \u46300 \u47484  \u51088 \u49885  \u53364 \u47000 \u49828 \u50640 \u49436  \u49688 \u51221 \u54616 \u44256 \u51088  \u54624  \u46412  \
		\uc0\u48512 \u47784  \u53364 \u47000 \u49828 \u50752  \u46041 \u51068 \u54620  \u51060 \u47492 \u51004 \u47196  \u49440 \u50616 , \u51116 \u51221 \u51032  \
3. \uc0\u52280 \u51312 \u48320 \u49688 \u51032  \u45796 \u54805 \u49457  (\u47588 \u44060 \u48320 \u49688 \u51032  \u45796 \u54805 \u49457 )\
		\uc0\u48512 \u47784  \u53364 \u47000 \u49828  \u53440 \u51077 \u51032  \u52280 \u51312 \u48320 \u49688 \u47196  \u51088 \u49885 \u53364 \u47000 \u49828  \u44061 \u52404 \u47484  \u44032 \u47532 \u53412 \u45716  \u44163 \u51012  \u54728 \u50857 \u54632 \
\
Object \uc0\u53364 \u47000 \u49828 \
\uc0\u47784 \u46304  \u53364 \u47000 \u49828 \u51032  \u52572 \u49345 \u50948  \u53364 \u47000 \u49828 \
\
1. toString( )\
	Object toString( )\uc0\u51008  \u52280 \u51312 \u44050 \u51012  \u47928 \u51088 \u50676  \u54805 \u53468 \u47196  \u48152 \u54872 \u54620 \u45796 .\
	(\uc0\u53364 \u47000 \u49828 \u44221 \u47196 \u50752 \u51060 \u47492 @16\u51652 \u49688 \u47196 \u48320 \u54872 \u46108  \u54644 \u49772 \u53076 \u46300 )\
	\uc0\u52280 \u51312  \u48320 \u49688 \u47484  print( )\u46321 \u51032  \u52636 \u47141 \u47700 \u49548 \u46300 \u47196  \u52636 \u47141 \u54616 \u47732  \u54637 \u49345  toString( )\u51060  \u49324 \u50857 \u46108 \u45796  \
	toString( )\uc0\u51012  \u53685 \u54644  \u52636 \u47141 \u46104 \u45716  \u47928 \u51088 \u50676 \u51012  \u48148 \u44984 \u44256  \u49910 \u51004 \u47732  \u51116 \u51221 \u51032 \u54644 \u49436  \u49324 \u50857 \u54616 \u47732  \u46108 \u45796  \
\
2. equals( )\
	Object\uc0\u51032  equals()\u45716  == \u44284  \u44057 \u45796 (\u52280 \u51312 \u44050  \u48708 \u44368 )\
	String\uc0\u51032  equals()\u45716  \u51116 \u51221 \u51032  \u46104 \u50612  \u44061 \u52404 \u44032  \u44057 \u51652  \u44050 \u51012  \u48708 \u44368 \u54620 \u45796  \
	- > \uc0\u47928 \u51088 \u50676  \u48708 \u44368 \u45716  equals()\u47484  \u49324 \u50857 \u54644 \u50556 \u54620 \u45796 . \
\
3. hashCode()\
	Object\uc0\u51032  hashCode( )\u51032  \u44061 \u52404 \u45716  \u51452 \u49548 \u44050 \u51012  \u53945 \u51221  \u50508 \u44256 \u47532 \u51608 \u51012  \u44144 \u52432 \u49436  \u51221 \u49688 \u44050 \u51004 \u47196  \u48152 \u54872 \u54620 \u45796 \
	\uc0\u51088 \u48148 \u50640 \u49436  equals()\u47484  \u51116 \u51221 \u51032 \u54616 \u47732  hashCode()\u46020  \u51116 \u51221 \u51032 \u54616 \u46020 \u47197  \u44428 \u51109 \u54620 \u45796 .\
	(\uc0\u46160  \u44061 \u52404 \u51032  equals()\u44032  true\u46972 \u47732  hashCode()\u46020  \u46041 \u51068 \u54616 \u44172  \u45208 \u50724 \u46020 \u47197  \u51116 \u51221 \u51032 \u54616 \u45716  \u44163 \u51012  \u44428 \u51109 \u54632 )\
\
\
Wrapper Class\
\uc0\u44592 \u48376  \u51088 \u47308 \u54805 \u46308 \u51032  \u53364 \u47000 \u49828 \u53440 \u51077 \
\
\uc0\u44592 \u48376  \u51088 \u47308 \u54805  : int, double, boolean,...\
\
\uc0\u53364 \u47000 \u49828 \u53440 \u51077  \u48320 \u49688  = new \u53364 \u47000 \u49828 \u53440 \u51077 (\u51077 \u48152 \u53440 \u51077  \u44050 );\
\uc0\u53364 \u47000 \u49828 \u53440 \u51077  \u48320 \u49688  = \u53364 \u47000 \u49828 \u53440 \u51077 .valueOf(\u51068 \u48152 \u53440 \u51077 \u51032  \u44050 );\
\
\uc0\u51088 \u47308 \u54805  \u48320 \u49688  = \u44050 ;\
\
\uc0\u44592 \u48376 \u53440 \u51077       Wrapper \u53364 \u47000 \u49828 \
int      Integer\
lon      Long\
double      Double\
float      Float\
boolean      Boolean\
char      Character \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}