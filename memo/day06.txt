
day06

제어문
프로그램의 흐름을 제어하는 것을 의미

1) 조건문
2) 반복문
3) 기타제어문

1. 조건문(if문)
if, if~else, if ~ else if ~ else

if문 : 조건식 True면 영역안의 코드가 실해됨
else if : 위의 조건식이 거짓이고 else if의 조건식이 True이면 실행
else : 위의 조건식들이 모두 거짓이면 실행

if (조건식){
	실행할 문장;
}


if (조건식1){
	if 조건식1이 참일때 실행할 문장;
} else if (조건식2){
	조건식1이 거짓이고 조건식2가 참일때 실행할 문장;
} else if(조건식3){
	조건식1,2가 거짓이고 조건식3이 참일 때 실행할 문장;
} else {
	위에 있는 조건식이 모두 거짓일때 실행할 문장;
}

조건문(switch문)

switch(변수){

case 값1:
	실행할 문장;
	break;
case 값2:
	실행할 문장;
	break;
...
default :
	실행할 문장;
}

- switch문에서 사용 가능한 변수의 데이터 타입
byte, short, int, char, String만 가능함(String jdk 7버전부터 가능)

삼항연산자, if문, switch문 비교
삼항 연산자 : 조건식이 1개 있을 경우 사용
if문 : 조건식 안에 비교연산자(<, >, <=, >=, ==, !=)를 사용하거나
       여러개의 조건식 사용 가능
switch문 : 하나의 변수에 여러개의 값이 담길 수 있고, case의 값과 같은지 비교할 때 사용

입력값이 정형화되어 있는 경우 if문 보다 switch문을 사용하는 것이 가독성이 좋다!


반복문

반복문(for문)

for(초기식;조건식;증감식){
	반복할 문장;
}

초기식 : 처음에 설정할 값
조건식 : 조건이 true면 영역안의 문장 실행시키고 false면 for문 탈출
증감식 : 반복할 수록 값이 얼마나 증감할지 정하는 식


반복문(while문)

while(조건식){
	반복실행할 문장;	
}

조건식의 결과가 true일 동안 반복

while문과 for문의 차이
for문 : 몇 번 반복하는지 알 수 있을 때(ex) 음식이 나오면 진동벨을 5번 울린다)
while문 : 몇 번 반복할지 모를때(ex) 손님이 키오스크로 주문하면 다시 메인화면으로 돌아간다)

반복문(do ~ while)
while문과 동일하지만 최소 한번은 무조건 실행해야할 때 사용

do{
  반복 실행할 문장;
}while(조건식);

이중 반복문
반복안에 반복이 있는 구조

for(초기식; 조건식; 증감식){
	for(초기식; 조건식; 증감식){
		반복 실행할 부분
	}
}

기타 제어문
1) break문 : 즉시 해당 중괄호 영역을 탈출한다
	- if문은 적용되지 않는다
	- 아래코드를 실행하지 않는다		

2) continue문 : 즉시 다음 반복으로 넘어간다
	- 아래코드를 실행하지 않는다





















